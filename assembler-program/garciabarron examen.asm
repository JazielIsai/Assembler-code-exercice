TITLE NUMEROS_PRIMOS_GARCIA_BARRON   

include 'emu8086.inc'

DATOS SEGMENT           
;------------------------------------------------------------------
    NUM DB 2 DUP(?) 
    PRIMOS DB 2 DUP(?)  
    NO_PRIMOS DB 2 DUP(?)  
    X DB 0
    Y DB 0
    REPETICION DB 0
    
DATOS ENDS    

;------------------------------------------------------------------

PILA SEGMENT
    DB 64 DUP(0)
PILA ENDS     

CODIGO SEGMENT
INICIO PROC FAR

    ASSUME DS:DATOS,CS:CODIGO, SS:PILA

        PUSH DS
        MOV  AX,0
        PUSH AX
        MOV AX, DATOS
        MOV DS, AX
        MOV ES, AX  

;---------------------------------------------------------------------- 
REPETIRPRIMOS:
REPETIRNOPRIMOS:
   
    MOV SI, 0
    MOV DI, 0
    MOV AX, 0
    MOV PRIMOS[0],0
    MOV PRIMOS[1],0
    MOV NO_PRIMOS[0],0 
    MOV NO_PRIMOS[1],0   
    MOV NUM[0],0
    MOV NUM[1],0 
     
CALL CLEAR_SCREEN 
GOTOXY X,Y
CALL PTHIS 
DB 'NUMEROS PRIMOS',0

INTRODUCE:
INC Y
GOTOXY X,Y
CALL PTHIS
DB 'INGRESA TU NUMERO A VERIFICAR SI ES PRIMO   ',0
CALL SCAN_NUM 
MOV NUM[SI],CL 
JNE INTRODUCE

MOV SI, 0
MOV CX, 0 
MOV Y, 7


 
CICLO: 
    CMP SI, 2  ;COMPARAMOS CON LOS NUMEROS QUE AGREGAMOS EN EL ARREGLO
    JE IMPRIME     
    MOV BL,1
    MOV AL, NUM[SI] ;PASAMOS A AL EL NUMERO QUE INDICA NUESTRO INDICE
    CMP AL, 2
    JE  PARPRIMO ;SALTA A ESTA ETIQUETA Y EL NUMERO PAR QUE ES PRIMO ES 2
    JA  PRIMO    ; SI ES MAYOR SALTA A ESTA ETIQUETA
    JB  GUARDAR_NUM_NO_PRIMO  ;SI ES MENOR SALATA A ESTA ETIQUETA  
 
 PRIMO:
    MOV AX,0
    MOV AL, NUM[SI] ;PASAMOS A AL EL NUMERO QUE INDIQUE NUESTRO INDICE
    INC BL ;
    DIV BL ;  AX ES EL DIVIDENDO Y BL EL DIVISOR
    CMP AH, 0;AQUI SE ALMACENA EL RESIDUO Y SI ES IGUAL A 0 ES NUMERO PAR
    JE GUARDAR_NUM_NO_PRIMO
    JA CONTADOR
    JE IMPRIME1
 
 CONTADOR:
    MOV CL, NUM[SI]
    SUB CL,3
    JMP PRIMO_COROBORAR_SI_ES
 
 PRIMO_COROBORAR_SI_ES:
    MOV AX,0
    MOV AL, NUM[SI] ;PASAMOS A AL EL NUMERO QUE INDICA NUESTRO INDICE
    CMP AL,3
    JE PRIMO_TRES
    INC BL ;INCREMENTAMOS BL
    DIV BL ;DIVIDIMOS ENTRE BL
    CMP AH, 0       ;SI EL RESIDUO ES MAYOR A 0
    JE GUARDAR_NUM_NO_PRIMO  ;HACE EL CICLO HASTA BUSCAR UN NUMERO QUE SE DIVIDA EXACTO Y SI ES ASI LO GUARDA
    LOOP PRIMO_COROBORAR_SI_ES  
 
 
 GUARDAR_NUMERO_PRIMO:
    MOV AL, NUM[SI];PASA EL NUMERO A AL 
    MOV PRIMOS[DI],AL  ; Y LO PASA CON SU ETIQUETA DEL INDICE DE DESTINO
    INC SI
    INC DI
    JMP CICLO 
      
 
 PARPRIMO: 
    MOV PRIMOS[DI],AL
    INC SI
    INC DI
    JMP CICLO     
    
 PRIMO_TRES:
    MOV PRIMOS[DI], AL
    INC SI
    INC DI
    JMP CICLO
    
 
 GUARDAR_NUM_NO_PRIMO: 
    MOV AL, NUM [SI]
    MOV NO_PRIMOS[DI], AL   
    INC SI
    INC DI
    JMP CICLO 
    

IMPRIME:               ;Cuando ya se haya terminado el ciclo JE IMPRIME nos mandara aqui
 MOV AL, PRIMOS[0]
 CMP AL,0
 JE  IMPRIME2:
 
 MOV BL, NO_PRIMOS[0]
 CMP BL,0
 JE  IMPRIME1:
    
 ;CMP AL, NO_PRIMOS[0]
 ;JE IMPRIME2:
 ;CMP BL, PRIMOS[0]
 ;JA IMPRIME1: 
  
    
IMPRIME1:
 MOV DI,0
 MOV AX,0
 CALL CLEAR_SCREEN
 MOV Y,5
 GOTOXY X,Y
 CALL PTHIS
 DB 'EL NUMERO ES PRIMOS POR QUE SON DIVISIBLES ENTRE 1 Y SU MISMO',0 
 INC Y 
 
 ;IMPRIME_PRIMOS:
 ;CMP DI, 2
 ;JA IMPRIME1
 MOV AL, PRIMOS[DI] 
 ;CMP AL, 00H       
 ;JE OMITIR  
 GOTOXY X, Y
 CALL PRINT_NUM_UNS
 
 INC X
 INC Y
 
 GOTOXY X,Y
 CALL PTHIS
 DB 'DESEA REALIZAR OTRO CALCULO 1...SI y 2...NO',0 
 CALL SCAN_NUM
 MOV REPETICION,CL
 
 MOV AX,0 
 MOV AL,REPETICION
 CMP AL,1 
 
 ;ADD X,5
 ;INC DI
 ;CMP DI, 2    
 ;JBE IMPRIME_PRIMOS
  
 JE REPETIRPRIMOS
 JNE DIJOQUENO1
 
 ;OMITIR:
 ;INC DI
 ;JMP IMPRIME_PRIMOS
 
 IMPRIME2: 
 MOV DI,0
 MOV AX,0 
 CALL CLEAR_SCREEN
 MOV X,2
 MOV Y,6
 GOTOXY X,Y
 CALL PTHIS
 DB 'EL NUMERO NO ES PRIMO POR QUE ES DIVISIBLE ENTRE MAS FACTORES',0
 INC Y
 ;JA EXIT
 
 ;IMPRIME_NOPRIMO:
 ;CMP DI,2 
 ;JA IMPRIME
 
 MOV AL,NO_PRIMOS[DI]
 ;CMP AL,0
 ;JE OMITIR2
 GOTOXY X,Y
 CALL PRINT_NUM_UNS 
 
 INC X
 INC Y
 
 GOTOXY X,Y
 CALL PTHIS
 DB 'DESEA REALIZAR OTRO CALCULO 1...SI y 2...NO',0 
 CALL SCAN_NUM
 MOV REPETICION,CL
 
 MOV AX,0 
 MOV AL,REPETICION
 CMP AL,1 


 ;ADD X,5 
 ;INC DI
 ;CMP DI,2 
 JE REPETIRNOPRIMOS 
 JNE DIJOQUENO2
 ;JBE IMPRIME_NOPRIMO
   
 
 ;OMITIR2:
 ;INC DI
 ;JMP IMPRIME1
 DIJOQUENO1:
 DIJOQUENO2:

 RET
    
    
INICIO ENDP

CODIGO ENDS
  
DEFINE_CLEAR_SCREEN         
DEFINE_SCAN_NUM
DEFINE_PRINT_STRING
DEFINE_PRINT_NUM
DEFINE_PRINT_NUM_UNS  ; required for print_num.
DEFINE_PTHIS  


END INICIO